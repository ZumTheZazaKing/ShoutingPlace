{"version":3,"sources":["firebase.js","Auth.js","ShoutAlert.js","CommentAlert.js","Comment.js","Comments.js","Shout.js","Home.js","EditProfileAlert.js","EditProfile.js","CreateShout.js","Dashboard.js","Navbar.js","ViewProfile.js","Notification.js","NotificationPost.js","Notifications.js","SearchResult.js","SearchPage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","storage","SignIn","id","Button","variant","color","onClick","provider","GoogleAuthProvider","signInWithPopup","FacebookAuthProvider","SignOut","currentUser","size","signOut","ShoutAlert","props","className","ref","shoutAlertRef","closeShoutAlertRef","deleteShout","CommentAlert","commentRef","collection","shoutRef","commentAlertRef","closeCommentAlert","doc","delete","commentFor","get","then","update","commentCount","data","Comment","commentData","commentBody","commentHandle","commentImage","commentTimestamp","uid","usersRef","useRef","openCommentAlert","current","name","imageClick","setViews","setViewUid","src","alt","Comments","useState","setCommentBody","commentsRef","shoutsRef","notiRef","query","where","orderBy","useCollectionData","idField","shoutComments","closeComments","InputLabel","TextField","multiline","rows","fullWidth","value","onChange","e","target","handleChange","inputProps","maxLength","required","Date","toLocaleString","add","username","photoURL","createdAt","FieldValue","serverTimestamp","notiUid","notiHandle","notiImage","notiPost","notiFor","notiMessage","notiTimestamp","notiPostImage","bodyImage","uidDoc","notiCount","createComment","map","comment","Shout","shoutData","userHandle","userImage","likeCount","createTimestamp","body","likeList","commentsReference","isChecked","setIsChecked","Collapse","in","collapsedSize","Tooltip","title","includes","slice","length","docs","forEach","shoutTimestamp","Home","type","setType","typeMsg","setTypeMsg","shouts","openViewProfile","closeProfile","closeHomePage","homePageRef","changeType","shout","setViewVariables","EditProfileAlert","editProfileAlertRef","closeAlert","alertMsg","EditProfile","image","setImage","docRef","setAlertMsg","openAlert","editProfileRef","accept","files","Input","setUsername","bio","setBio","Math","max","parseInt","toString","website","setWebsite","email","setEmail","closeEditProfile","trim","put","setTimeout","child","getDownloadURL","res","setPhotoURL","CreateShout","setShout","imagePath","createShoutRef","closeCreateShout","createShout","Dashboard","userShouts","displayName","joinDate","setJoinDate","setValues","useEffect","exists","set","toLocaleDateString","profileRef","href","Navbar","useAuthState","user","setNotiCount","setInterval","closeNoti","closeViewProfile","openSearch","Badge","badgeContent","min","overlap","openNoti","closeSearch","openHomePage","openProfile","ViewProfile","viewUid","viewShouts","viewProfileRef","viewImage","viewUsername","viewBio","viewWebsite","viewEmail","viewJoined","viewShout","Notification","notiData","openNotiPost","setNotiPostName","setNotiPostImage","setNotiPostTime","setNotiPostBody","setNotiPostBodyImage","setNotiPostHandle","setNotiMessage","setNotiPostHandleImage","NotificationPost","notiPostRef","closeNotiPost","notiPostName","notiPostTime","notiPostBody","notiPostBodyImage","notiPostHandleImage","notiPostHandle","notiPostMessage","Notifications","limit","notifications","notification","SearchResult","resultData","SearchPage","searchQuery","setSearchQuery","results","searchRef","placeholder","result","App","setViewUsername","setViewImage","setViewBio","setViewWebsite","setViewEmail","setViewJoined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa428724.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyB2QhpdFDsPmelQzDXQZWT44w0jW0v0iiw\",\n    authDomain: \"shoutingplace.firebaseapp.com\",\n    projectId: \"shoutingplace\",\n    storageBucket: \"shoutingplace.appspot.com\",\n    messagingSenderId: \"324178521757\",\n    appId: \"1:324178521757:web:0474ab0735981cb7332e74\",\n    measurementId: \"G-QL87Y3L02R\"\n});\n\nexport default firebase;\n\n","import firebase from './firebase';\nimport Button from '@material-ui/core/Button';\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\n\nexport function SignIn(){\n\n    const signInWithGoogle = () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.signInWithPopup(provider);\n    }\n    const signinWithFacebook = () => {\n        const provider = new firebase.auth.FacebookAuthProvider();\n        auth.signInWithPopup(provider);\n    }\n\n    return (<div id=\"SignIn\">\n        <h2>ShoutingPlace</h2>\n        <p>A place where people can shout out their thoughts without having to keep it in\n            <br/><br/>\n            (Once you sign in through one of the options, the other option will be unavailable <b>permanently</b>)\n        </p>\n        <Button variant=\"contained\" color=\"secondary\" onClick={signInWithGoogle}>\n            Sign in With Google\n        </Button>\n        <br/><br/>\n        <Button variant=\"contained\" color=\"primary\" onClick={signinWithFacebook}>\n            Sign in With Facebook\n        </Button>\n    </div>)\n}\n\nexport function SignOut(){\n    return auth.currentUser && (\n        <Button variant=\"contained\" size=\"small\" onClick={() => auth.signOut()}>\n            Sign Out\n        </Button>\n    )\n}","import Button from '@material-ui/core/Button';\n\nexport function ShoutAlert(props){\n    return (<div id=\"shoutAlert\" className=\"hide\" ref={props.shoutAlertRef}>\n        <div id=\"shoutAlertContent\">\n            <p>Delete the shout?</p>\n            <Button onClick={() => props.closeShoutAlertRef()}>NO</Button>\n            <Button onClick={() => {props.deleteShout(); props.closeShoutAlertRef()}} variant=\"contained\" color=\"secondary\">YES</Button>\n        </div>\n    </div>)\n}","import Button from '@material-ui/core/Button';\n\nimport { firestore } from './Auth';\n\nexport function CommentAlert(props){\n\n    const commentRef = firestore.collection(\"comments\");\n    const shoutRef = firestore.collection(\"shouts\");\n\n\n    function deleteComment(){\n        props.closeCommentAlert();\n        commentRef.doc(props.id).delete();\n        shoutRef.doc(props.commentFor).get().then(doc => {\n            shoutRef.doc(props.commentFor).update({commentCount:doc.data().commentCount - 1});\n        })\n    }\n\n    return (<div id=\"CommentAlert\" className=\"hide\" ref={props.commentAlertRef}>\n        <div id=\"commentAlertContent\">\n            <p>Delete the comment?</p>\n            <Button onClick={() => props.closeCommentAlert()}>NO</Button>\n            <Button onClick={() => deleteComment()} variant=\"contained\" color=\"secondary\">YES</Button>\n        </div>\n    </div>)\n}","import { auth, firestore } from './Auth';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { CommentAlert } from './CommentAlert';\n\nimport { useRef } from 'react';\n\nexport function Comment(props){\n\n    const { commentBody, commentHandle, commentImage, commentTimestamp, id, uid, commentFor} = props.commentData;\n\n    const usersRef = firestore.collection(\"users\");\n\n    function viewProfile(){\n        props.imageClick();\n        usersRef.doc(uid).get().then(doc => {\n            props.setViews(doc.data())\n        })\n        props.setViewUid(uid);\n    }\n\n    function openAlert(){\n        openCommentAlert();\n    }\n\n    const commentAlertRef = useRef();\n    const closeCommentAlert = () => commentAlertRef.current.className = \"hide\";\n    const openCommentAlert = () => commentAlertRef.current.className = \"\";\n\n    return (<div className=\"comment\" id={id} name={uid}>\n        <div id=\"commentHeader\">\n            <div id=\"commentInfo\">\n                <img onClick={auth.currentUser === null ? () => {return} : (auth.currentUser.uid !== uid ? () => viewProfile() : () => {return})} src={commentImage} alt=\"PP here\"/>\n                <p><span>{commentHandle}</span><br/>{commentTimestamp}</p>\n            </div>\n            <div id=\"deleteContainer\">\n                {auth.currentUser === null ? \"\" : (auth.currentUser.uid === uid ? <DeleteIcon id=\"delete\" onClick={() => openAlert()}/> : \"\")}\n            </div>\n        </div>\n        <div id=\"commentBody\">\n            {commentBody}\n        </div>\n        <CommentAlert commentAlertRef={commentAlertRef} id={id} commentFor={commentFor} closeCommentAlert={closeCommentAlert}/>\n    </div>)\n}","import InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { useState } from 'react';\nimport { auth, firestore } from './Auth';\nimport firebase from './firebase';\nimport { Comment } from './Comment';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nexport function Comments(props){\n\n    const [commentBody, setCommentBody] = useState(\"\");\n    const handleChange = e => setCommentBody(e.target.value);\n\n    const commentsRef = firestore.collection(\"comments\");\n    const usersRef = firestore.collection(\"users\");\n    const shoutsRef = firestore.collection(\"shouts\");\n    const notiRef = firestore.collection(\"notifications\");\n\n    const query = commentsRef.where(\"commentFor\",\"==\",props.id).orderBy(\"createdAt\");\n\n    const [shoutComments] = useCollectionData(query, {idField:'id'});\n\n    const createComment = () => {\n\n        if(!commentBody)return;\n\n        let commentTimestamp = new Date().toLocaleString();\n\n        usersRef.doc(auth.currentUser.uid).get().then(doc => {\n            commentsRef.add({\n                commentFor:props.id,\n                commentHandle:doc.data().username,\n                commentImage:doc.data().photoURL,\n                commentBody:commentBody,\n                commentTimestamp:commentTimestamp,\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n                uid:auth.currentUser.uid\n            })\n        })\n\n        shoutsRef.doc(props.id).get().then(doc => {\n            shoutsRef.doc(props.id).update({commentCount: doc.data().commentCount + 1})\n        })\n\n        setCommentBody(\"\");\n\n        if(auth.currentUser.uid === props.uid)return;\n\n        usersRef.doc(auth.currentUser.uid).get().then(doc => {\n            notiRef.add({\n                notiUid:auth.currentUser.uid,\n                notiHandle:doc.data().username,\n                notiImage:doc.data().photoURL,\n                notiPost:props.id,\n                notiFor:props.uid,\n                createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n                notiMessage:\"commented on your shout\",\n                notiTimestamp:commentTimestamp,\n                notiPostImage:props.bodyImage\n            })\n            usersRef.doc(props.uid).get().then(uidDoc => {\n                usersRef.doc(props.uid).update({\n                    notiCount:uidDoc.data().notiCount + 1\n                })\n            })\n        })\n\n\n    }\n\n    return (<div id=\"Comments\" ref={props.commentsRef} className=\"hide\">\n        <div id=\"commentsContent\">\n            <span id=\"close\" onClick={() => props.closeComments()}>&times;</span>\n            <br/>\n            <div id=\"commentInput\">\n                <InputLabel>Comment!</InputLabel>\n                <TextField \n                    multiline={true} \n                    rows=\"2\" \n                    fullWidth={true} \n                    color=\"primary\" \n                    value={commentBody}\n                    onChange={e => handleChange(e)}\n                    inputProps={{maxLength:200}}\n                    required\n                />\n            </div>\n            <br/>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => createComment()}>\n                <SendIcon/>\n            </Button>\n            <br/><br/>\n            <hr/>\n            <div id=\"commentsSection\">\n                {shoutComments && shoutComments.map(comment => <Comment imageClick={props.imageClick} setViews={props.setViews} setViewUid={props.setViewUid} key={comment.id} commentData={comment}/>)}\n            </div>\n        </div>\n    </div>)\n}","import DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport firebase from './firebase';\nimport { auth, firestore } from './Auth';\nimport { ShoutAlert } from './ShoutAlert';\nimport { Comments } from './Comments';\n\nimport { useRef, useState } from 'react'; \n\nexport function Shout(props){\n\n    const { uid, userHandle, userImage, likeCount, createTimestamp, body, id, likeList, commentCount, bodyImage } = props.shoutData;\n    const shoutsRef = firestore.collection(\"shouts\");\n    const commentsReference = firestore.collection(\"comments\");\n    const usersRef = firestore.collection(\"users\");\n    const notiRef = firestore.collection(\"notifications\");\n\n    const [isChecked, setIsChecked] = useState(false);\n\n    const commentsRef = useRef();\n    const openComments = () => commentsRef.current.className = \"\";\n    const closeComments = () => commentsRef.current.className = \"hide\";\n\n    const shoutAlertRef = useRef();\n    const openShoutAlertRef = () => {shoutAlertRef.current.className = \"\";}\n    const closeShoutAlertRef = () => {shoutAlertRef.current.className = \"hide\";}\n    function deleteShout(){\n        shoutsRef.doc(id).delete();\n        commentsReference.get().then(docs => {\n            docs.forEach(doc => {\n                if(doc.data().commentFor === id){\n                    doc.ref.delete();\n                }\n            })\n        })\n    }\n\n\n    function ToggleLike(){\n        shoutsRef.doc(id).get().then(doc => {\n            if(doc.data().likeList.includes(auth.currentUser.uid)){\n                shoutsRef.doc(id).update({\n                    likeCount: likeCount - 1,\n                    likeList: likeList.slice(0, likeList.length - 1)\n                })\n\n                if(auth.currentUser.uid === uid)return;\n                notiRef.get().then(docs => {\n                    docs.forEach(data => {\n                        if(data.data().notiUid === auth.currentUser.uid){\n                            if(data.data().notiPost === id){\n                                data.ref.delete();\n                            }\n                        }\n                    })\n                })\n                usersRef.doc(uid).get().then(uidDoc => {\n                    usersRef.doc(uid).update({\n                        notiCount:uidDoc.data().notiCount - 1\n                    })\n                })\n\n            } else {\n                shoutsRef.doc(id).update({\n                    likeList:[...likeList, auth.currentUser.uid],\n                    likeCount:likeCount+1,\n                })\n\n                if(auth.currentUser.uid === uid)return;\n                const shoutTimestamp = new Date().toLocaleString();\n\n                usersRef.doc(auth.currentUser.uid).get().then(data => {\n                    notiRef.add({\n                        notiUid:auth.currentUser.uid,\n                        notiHandle:data.data().username,\n                        notiImage:data.data().photoURL,\n                        notiPost:id,\n                        notiFor:uid,\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n                        notiMessage:\"liked your shout\",\n                        notiTimestamp:shoutTimestamp,\n                        notiPostImage:bodyImage\n                    })\n                    usersRef.doc(uid).get().then(uidDoc => {\n                        usersRef.doc(uid).update({\n                            notiCount:uidDoc.data().notiCount + 1\n                        })\n                    })\n                })\n            }\n        })\n    }\n\n    function viewProfile(){\n        props.imageClick();\n        usersRef.doc(uid).get().then(doc => {\n            props.setViews(doc.data())\n        })\n        props.setViewUid(uid);\n    }\n\n    return (<div className=\"shout\" id={id} name={uid}>\n        <div id=\"shoutHeader\">\n            <div id=\"shoutHeaderMain\">\n                <img src={userImage} alt=\"PP here\" onClick={auth.currentUser === null ? () => {return} : (auth.currentUser.uid !== uid ? () => viewProfile() : () => {return})}/>\n                <div id=\"shoutInfo\">\n                    <p>\n                        {userHandle}<br/>\n                        <span>{createTimestamp}</span>\n                    </p>\n                </div>\n            </div>\n            <p>{auth.currentUser === null ? \"\" : (auth.currentUser.uid === uid ? <DeleteIcon onClick={() => openShoutAlertRef()} className=\"deleteShout\"/> : \"\")}</p>\n        </div>\n        <br/>\n        <div id=\"shoutBody\">\n            <p>{body}</p>\n            <br/>\n            {bodyImage ? \n            <Collapse in={isChecked} collapsedSize=\"100px\">\n                <img src={bodyImage} onClick={isChecked ? () => setIsChecked(false) : () => setIsChecked(true)} alt=\"Post img here\"/>\n            </Collapse>\n            : \"\"}\n        </div>\n        <div id=\"shoutFooter\">\n            <Tooltip title=\"Likes\">\n                <p id=\"likes\" onClick={() => ToggleLike()}>\n                    <FavoriteIcon/>\n                    {likeCount}\n                </p>\n            </Tooltip>\n            <Tooltip title=\"Comments\">\n                <p id=\"comments\" onClick={() => openComments()}>\n                    <ChatIcon/>\n                    {commentCount}\n                </p>\n            </Tooltip>\n        </div>\n        <ShoutAlert\n        closeShoutAlertRef={closeShoutAlertRef}\n        deleteShout={deleteShout}\n        shoutAlertRef={shoutAlertRef}\n        />\n        <Comments\n        commentsRef={commentsRef}\n        closeComments={closeComments}\n        id={id}\n        uid={uid}\n        imageClick={props.imageClick}\n        setViews={props.setViews}\n        setViewUid={props.setViewUid}\n        bodyImage={bodyImage}\n        />\n    </div>)\n}","import { firestore } from \"./Auth\";\nimport { Shout } from \"./Shout\";\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport { useState } from 'react';\n\nexport function Home(props){\n\n    const [type, setType] = useState(\"createdAt\");\n    const [typeMsg, setTypeMsg] = useState(\"Latest Shouts\");\n\n    const shoutsRef = firestore.collection(\"shouts\");\n    const query = shoutsRef.orderBy(type, \"desc\");\n\n    const [shouts] = useCollectionData(query, {idField:'id'});\n\n    function openViewProfile(){\n        props.openViewProfile();\n        props.closeProfile();\n        props.closeHomePage();\n    }\n\n    function changeType(e){\n        setType(e.target.value);\n        if(e.target.value === 'createdAt'){\n            setTypeMsg(\"Latest Shouts\");\n        } else if (e.target.value === 'likeCount'){\n            setTypeMsg(\"Most Likes\");\n        } else {\n            setTypeMsg(\"Most Comments\");\n        }\n    }\n\n    return (<div id=\"homepage\" className=\"hide\" ref={props.homePageRef}>\n        <div id=\"header\">\n            <h2>{typeMsg}</h2>\n            <select onChange={e => changeType(e)} value={type}>\n                <option value=\"createdAt\">Lastest</option>\n                <option value=\"likeCount\">Most Likes</option>\n                <option value=\"commentCount\">Most Comments</option>\n            </select>\n        </div>\n        <div id=\"shouts\">\n            {shouts && shouts.map(shout => <Shout imageClick={openViewProfile} setViewUid={props.setViewUid} setViews={props.setViewVariables} key={shout.id} shoutData={shout}/>)}\n        </div>\n    </div>)\n}","export function EditProfileAlert(props){\n    return (<div id=\"EditProfileAlert\" className=\"hide\" ref={props.editProfileAlertRef}>\n        <div id=\"alertContent\">\n            <span onClick={() => props.closeAlert()}>&times;</span>\n            <br/>\n            <p>{props.alertMsg}</p>\n        </div>\n    </div>)\n}","import Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useState, useRef } from 'react';\n\nimport { storage, auth, firestore } from './Auth';\nimport { EditProfileAlert } from './EditProfileAlert';\n\nexport function EditProfile(props){\n\n    const [image, setImage] = useState('');\n    const docRef = firestore.collection(\"users\").doc(auth.currentUser.uid);\n\n    const [alertMsg, setAlertMsg] = useState(\"\");\n\n    const editProfileAlertRef = useRef();\n    const openAlert = () => editProfileAlertRef.current.className = \"\";\n    const closeAlert = () => editProfileAlertRef.current.className = \"hide\";\n\n    const update = () => {\n        if(!props.username){\n            setAlertMsg(\"Please fill in Username\");\n            openAlert();\n            return;\n        }\n        if(!props.bio){\n            props.setBio(\"The user is lazy and didn't set a bio...\")\n        }\n        if(!props.website){\n            props.setWebsite(\"\");\n        }\n        if(!props.email){\n            props.setEmail(\"\");\n        } else {\n            if(!props.email.includes(\"@\")){\n                setAlertMsg(\"Emails must have '@'\");\n                openAlert();\n                return;\n            }\n        }\n\n\n        props.closeEditProfile();\n\n        docRef.update({\n            username:props.username.trim(),\n            bio:props.bio || \"The user is lazy and didn't set a bio...\",\n            website:props.website,\n            email:props.email\n        })\n\n\n        if(!image)return; //Below this point is for updating the image\n    \n        storage.ref(`${auth.currentUser.uid}PPImages/${image.name}`).put(image);\n    \n        setTimeout(() => {\n            storage.ref().child(`${auth.currentUser.uid}PPImages/${image.name}`).getDownloadURL().then(res => {\n                docRef.update({photoURL:res});\n                props.setPhotoURL(res);\n            })\n        },4000);\n\n    }\n\n    return (<div id=\"editProfile\" className=\"hide\" ref={props.editProfileRef}>\n       <div id=\"editForm\">\n            <div id=\"fillIn\">\n                <InputLabel>Profile Picture</InputLabel><br/>\n                <input type=\"file\" accept=\".png,.jpeg,.jpg\" onChange={(e)=>{setImage(e.target.files[0])}}/>\n                <br/><br/>\n\n                <InputLabel>Username</InputLabel>\n                <Input inputProps={{maxLength:25}} fullWidth={true} color=\"primary\" value={props.username} onChange={e => props.setUsername(e.target.value)} required/><br/><br/>\n                \n                <InputLabel>Bio</InputLabel>\n                <TextField \n                multiline={true} \n                rows=\"2\" \n                fullWidth={true} \n                color=\"primary\" \n                value={props.bio} \n                onChange={e => {props.setBio(e.target.value); e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,12)}} \n                inputProps={{maxLength:160}}\n                required/>\n                <br/><br/>\n\n                <InputLabel>Website</InputLabel>\n                <Input fullWidth={true} color=\"primary\" value={props.website} onChange={e => props.setWebsite(e.target.value)} required/><br/><br/>\n                \n                <InputLabel>Email</InputLabel>\n                <Input type=\"email\" fullWidth={true} color=\"primary\" value={props.email} onChange={e => props.setEmail(e.target.value)} required/>\n                <br/><br/>\n            </div>  \n            <Button type=\"submit\" id=\"submit\" color=\"primary\" variant=\"contained\" onClick={() => update()}>DONE</Button>     \n       </div>\n       <EditProfileAlert\n       editProfileAlertRef={editProfileAlertRef}\n       closeAlert={closeAlert}\n       alertMsg={alertMsg}\n       />\n    </div>)\n}","import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { useState } from 'react';\nimport { auth, firestore, storage } from './Auth';\nimport firebase from './firebase';\n\nexport function CreateShout(props){\n\n    const shoutsRef = firestore.collection(\"shouts\");\n\n    const [shout, setShout] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    const [imagePath, setImagePath] = useState(\"\");\n\n    const createShout = () => {\n        if(!shout)return;\n\n        let createTimestamp = new Date().toLocaleString();\n\n        if(image){\n            storage.ref(`${auth.currentUser.uid}PostImages/${image.name}`).put(image);\n    \n            setTimeout(() => {\n                storage.ref().child(`${auth.currentUser.uid}PostImages/${image.name}`).getDownloadURL().then(res => {\n                    shoutsRef.add({\n                        uid:auth.currentUser.uid,\n                        userHandle:props.username,\n                        likeCount:0,\n                        commentCount:0,\n                        userImage:props.photoURL,\n                        body:shout,\n                        createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n                        createTimestamp: createTimestamp,\n                        likeList:[],\n                        bodyImage:res\n                    })\n                })\n            },4000)\n            setShout(\"\");\n            setImage(\"\");\n            props.closeCreateShout();\n            return;\n        }\n\n        shoutsRef.add({\n            uid:auth.currentUser.uid,\n            userHandle:props.username,\n            likeCount:0,\n            commentCount:0,\n            userImage:props.photoURL,\n            body:shout,\n            createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n            createTimestamp: createTimestamp,\n            likeList:[],\n            bodyImage:imagePath\n        })\n\n        setShout(\"\");\n        props.closeCreateShout();\n    }\n\n    return (<div id=\"createShout\" className=\"hide\" ref={props.createShoutRef}>\n        <div id=\"createForm\">\n            <span id=\"close\" onClick={() => props.closeCreateShout()}>&times;</span>\n            <h4>Create Shout</h4>\n            <TextField \n            multiline={true} \n            rows=\"5\" \n            fullWidth={true} \n            color=\"primary\" \n            inputProps={{maxLength:280}}\n            required\n            value={shout}\n            onChange={e => setShout(e.target.value)}\n            />\n            <br/><br/>\n            <div id=\"shoutButton\">\n                <input type=\"file\" accept=\".png,.jpeg,.jpg\" onChange={(e)=>{setImage(e.target.files[0])}}/>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => createShout()}>SHOUT!</Button>\n            </div>\n        </div>\n    </div>)\n}","import { SignOut, auth, firestore } from \"./Auth\";\nimport { EditProfile } from './EditProfile';\nimport { CreateShout } from './CreateShout';\n\nimport LinkIcon from '@material-ui/icons/Link';\nimport EmailIcon from '@material-ui/icons/Email';\nimport EventIcon from '@material-ui/icons/Event';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Shout } from './Shout';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nexport function Dashboard(props){\n\n    const shoutsRef = firestore.collection(\"shouts\");\n    const query = shoutsRef.where(\"uid\",\"==\",auth.currentUser.uid).orderBy(\"createdAt\", \"desc\");\n\n    const [userShouts] = useCollectionData(query, {idField:'id'});\n\n    const [username, setUsername] = useState(auth.currentUser.displayName);\n    const [photoURL, setPhotoURL] = useState(auth.currentUser.photoURL);\n    const [bio, setBio] = useState(\"The user is lazy and didn't set a bio...\");\n    const [website, setWebsite] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [joinDate, setJoinDate] = useState(\"Loading...\");\n\n    const editProfileRef = useRef();\n    const closeEditProfile = () => {editProfileRef.current.className = \"hide\";}\n    const openEditProfile = () => {editProfileRef.current.className = \"\";}\n\n    const createShoutRef = useRef();\n    const openCreateShout = () => {createShoutRef.current.className = \"\"}\n    const closeCreateShout = () => {createShoutRef.current.className = \"hide\"}\n\n    function openViewProfile(){\n        props.openViewProfile();\n        props.closeProfile();\n        props.closeHomePage();\n    }\n\n    function setValues(data){\n        setUsername(data.username);\n        setPhotoURL(data.photoURL);\n        setBio(data.bio);\n        setWebsite(data.website);\n        setEmail(data.email);\n        setJoinDate(data.joinDate);\n    }\n\n    const docRef = props.usersRef.doc(auth.currentUser.uid);\n    \n    useEffect(() => {\n        docRef.get().then(doc => {\n            if(doc.exists){\n                docRef.get().then(data => setValues(data.data()))\n            } else {\n                docRef.set({\n                    username:auth.currentUser.displayName,\n                    photoURL:auth.currentUser.photoURL,\n                    bio:bio,\n                    website:website,\n                    email:email,\n                    joinDate:new Date().toLocaleDateString(),\n                    notiCount:0\n                });\n                docRef.get().then(data => setValues(data.data()))\n            }\n        })\n    },[])\n\n    return (<div id=\"dashboard\" ref={props.profileRef}>\n        <div id=\"dashboardContent\">\n            <img id=\"profilePicture\" src={photoURL} alt=\"profile phot should be here\"/>\n            <button id=\"editButton\" onClick={() => openEditProfile()}>EDIT</button>\n            <h2>{username}</h2>\n            <p id=\"bio\">{bio}</p>\n            {website ? <p><a id=\"link\" href={website}><LinkIcon className=\"icon\"/>{website}</a></p> : \"\"}\n            {email ? <p><EmailIcon className=\"icon\"/>{email}</p> : \"\"}\n            <p><EventIcon className=\"icon\"/>Joined {joinDate}</p>\n            <br/>\n            <SignOut/>\n        </div>\n        <br/>\n        <Tooltip title=\"Create Shout\">\n            <Button id=\"addShout\" variant=\"contained\" color=\"primary\" onClick={() => openCreateShout()}>+</Button>\n        </Tooltip>\n        <br/><br/>\n        <div id=\"userShouts\">\n            <h2>Your Shouts</h2>\n            <hr/>\n            {userShouts && userShouts.map(shout => <Shout imageClick={openViewProfile} setViewUid={props.setViewUid} setViews={props.setViewVariables} key={shout.id} shoutData={shout}/>)}\n        </div>\n        <EditProfile\n        photoURL={photoURL}\n        username={username}\n        bio={bio}\n        website={website}\n        email={email}\n        setPhotoURL={setPhotoURL}\n        setUsername={setUsername}\n        setBio={setBio}\n        setWebsite={setWebsite}\n        setEmail={setEmail}\n        editProfileRef={editProfileRef}\n        closeEditProfile={closeEditProfile}\n        />\n        <CreateShout\n        createShoutRef={createShoutRef}\n        closeCreateShout={closeCreateShout}\n        username={username}\n        photoURL={photoURL}\n        />\n    </div>)\n}","import Home from \"@material-ui/icons/Home\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { auth, firestore } from './Auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useState, useEffect } from 'react';\n\nexport function Navbar(props){\n    const [user] = useAuthState(auth);\n\n    const usersRef = firestore.collection(\"users\");\n\n    const [notiCount, setNotiCount] = useState(0);\n\n    setInterval(() => {\n        if(auth.currentUser === null){\n            return;\n        } else {\n            usersRef.doc(auth.currentUser.uid).get().then(doc => {\n                setNotiCount(doc.data().notiCount);\n            })\n        }\n    },1000)\n\n    function goToHome(){\n        props.closeProfile();\n        props.openHomePage();\n        props.closeViewProfile();\n        props.closeNoti();\n        props.closeSearch();\n    }\n\n    function goToProfile(){\n        props.openProfile();\n        props.closeHomePage();\n        props.closeViewProfile();\n        props.closeNoti();\n        props.closeSearch();\n    }\n\n    function goToNotifications(){\n        props.openNoti();\n        props.closeProfile();\n        props.closeHomePage();\n        props.closeViewProfile();\n        props.closeSearch();\n        usersRef.doc(auth.currentUser.uid).update({\n            notiCount:0\n        })\n        setNotiCount(0);\n    }\n\n    function goToSearch(){\n        props.closeNoti();\n        props.closeProfile();\n        props.closeHomePage();\n        props.closeViewProfile();\n        props.openSearch();\n    }\n\n    return (<div id=\"Navbar\">\n        <p>ShoutingPlace</p>\n        {user ? <div id=\"navButtons\">\n                    <Tooltip title=\"Search\">\n                        <SearchIcon onClick={() => goToSearch()} className=\"btn\"/>\n                    </Tooltip>\n                    <Tooltip title=\"Notifications\">\n                        <Badge color=\"secondary\" badgeContent={notiCount} min={0} max={10} overlap=\"circular\">\n                            <NotificationsIcon onClick={() => goToNotifications()} className=\"btn\"/>\n                        </Badge>\n                    </Tooltip>\n                    <Tooltip title=\"Home\">\n                        <Home onClick={() => goToHome()} className=\"btn\"/>\n                    </Tooltip>\n                    <Tooltip title=\"Profile\">\n                        <AccountCircleIcon onClick={() => goToProfile()} className=\"btn\"/>\n                    </Tooltip>\n                </div> \n                : \"\"}\n    </div>)\n}","import LinkIcon from '@material-ui/icons/Link';\nimport EmailIcon from '@material-ui/icons/Email';\nimport EventIcon from '@material-ui/icons/Event';\n\nimport { firestore } from './Auth';\nimport { Shout } from './Shout';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nexport function ViewProfile(props){\n\n    const shoutsRef = firestore.collection(\"shouts\");\n    const query = shoutsRef.where(\"uid\",\"==\",props.viewUid).orderBy(\"createdAt\",\"desc\");\n\n    const [viewShouts] = useCollectionData(query, {idField:'id'});\n\n    function openViewProfile(){\n        props.openViewProfile();\n        props.closeProfile();\n        props.closeHomePage();\n    }\n\n    return (<div id=\"ViewProfile\" className=\"hide\" ref={props.viewProfileRef}>\n        <div id=\"dashboardContent\">\n            <img id=\"profilePicture\" src={props.viewImage} alt=\"Loading...\"/>\n            <h2>{props.viewUsername}</h2>\n            <p id=\"bio\">{props.viewBio}</p>\n            {props.viewWebsite ? <p><a id=\"link\" href={props.viewWebsite}><LinkIcon className=\"icon\"/>{props.viewWebsite}</a></p> : \"\"}\n            {props.viewEmail ? <p><EmailIcon className=\"icon\"/>{props.viewEmail}</p> : \"\"}\n            <p><EventIcon className=\"icon\"/>Joined {props.viewJoined}</p>\n        </div>\n        <br/>\n        <div id=\"userShouts\">\n            <h2>{props.viewUsername}'s Shouts</h2>\n            <hr/>\n            {viewShouts && viewShouts.map(viewShout => <Shout imageClick={openViewProfile} setViewUid={props.setViewUid} setViews={props.setViewVariables} shoutData={viewShout}/>)}\n        </div>\n    </div>)\n}","import { firestore } from './Auth';\n\n\nexport function Notification(props){\n\n    const { notiHandle, notiImage, notiMessage, notiTimestamp, notiPost} = props.notiData;\n\n    const shoutsRef = firestore.collection(\"shouts\");\n\n    function setNotiPost(){\n        props.openNotiPost();\n\n        shoutsRef.doc(notiPost).get().then(doc => {\n            props.setNotiPostName(doc.data().userHandle);\n            props.setNotiPostImage(doc.data().userImage);\n            props.setNotiPostTime(doc.data().createTimestamp);\n            props.setNotiPostBody(doc.data().body);\n            props.setNotiPostBodyImage(doc.data().bodyImage)\n\n            props.setNotiPostHandle(notiHandle);\n            props.setNotiMessage(notiMessage);\n            props.setNotiPostHandleImage(notiImage);\n        })\n    }\n\n\n    return (<div className=\"notification\" onClick={() => setNotiPost()}>\n        <img src={notiImage} alt=\"PP here\"/>\n        <p>{notiHandle} {notiMessage} <span>{notiTimestamp}</span></p>\n    </div>)\n}","import Collapse from '@material-ui/core/Collapse';\n\nimport { useState } from 'react';\n\nexport function NotificationPost(props){\n\n    const [isChecked, setIsChecked] = useState(false);\n\n    return (<div id=\"notificationPost\" className=\"hide\" ref={props.notiPostRef}>\n        <div id=\"notiPostContent\">\n            <span id=\"close\" onClick={() => props.closeNotiPost()}>&times;</span>\n            <div id=\"notiPostHeader\">\n                <img src={props.notiPostImage} alt=\"PP here\"/>\n                <p><span>{props.notiPostName}</span>\n                <br/>{props.notiPostTime}</p>\n            </div>\n            <div id=\"notiPostBody\">\n                <p>{props.notiPostBody}</p>\n                <br/>\n                {props.notiPostBodyImage ? <Collapse in={isChecked} collapsedSize=\"100px\">\n                    <img src={props.notiPostBodyImage} onClick={isChecked ? () => setIsChecked(false) : () => setIsChecked(true)} alt=\"Post img here\"/>\n                </Collapse>\n                : \"\"}\n            </div>\n            <div id=\"notiPostFooter\">\n                <img src={props.notiPostHandleImage} alt=\"pp here\"/>\n                <p>{props.notiPostHandle} {props.notiPostMessage === \"commented on your shout\" ? \"commented on this shout\" : \"liked this shout\"}</p>\n            </div>\n        </div>\n    </div>)\n}","import { firestore, auth } from './Auth';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport { Notification } from './Notification';\nimport { NotificationPost } from './NotificationPost';\nimport { useRef, useState } from 'react';\n\n\nexport function Notifications(props){\n\n    const notiPostRef = useRef()\n    const openNotiPost = () => notiPostRef.current.className = \"\";\n    const closeNotiPost = () => notiPostRef.current.className = \"hide\";\n\n    const [notiPostName, setNotiPostName] = useState(\"\");\n    const [notiPostImage, setNotiPostImage] = useState(\"\");\n    const [notiPostTime, setNotiPostTime] = useState(\"\");\n    const [notiPostBody, setNotiPostBody] = useState(\"\");\n    const [notiPostBodyImage, setNotiPostBodyImage] = useState(\"\");\n\n    const [notiPostHandle, setNotiPostHandle] = useState(\"\");\n    const [notiPostMessage, setNotiMessage] = useState(\"\");\n    const [notiPostHandleImage, setNotiPostHandleImage] = useState(\"\");\n\n    const notiRef = firestore.collection(\"notifications\");\n    let query = auth.currentUser ? notiRef.where(\"notiFor\",\"==\",auth.currentUser.uid).orderBy(\"createdAt\",\"desc\").limit(50) : notiRef;\n\n    let [notifications] = useCollectionData(query, {idField:'id'});\n\n    return <div id=\"Notifications\" className=\"hide\" ref={props.notiRef}>\n        <h2>Notifications</h2>\n        <div id=\"notis\">\n            {notifications && notifications.map(notification => <Notification \n            openNotiPost={openNotiPost}\n            setNotiPostName={setNotiPostName}\n            setNotiPostImage={setNotiPostImage}\n            setNotiPostBody={setNotiPostBody} \n            setNotiPostTime={setNotiPostTime}\n            setNotiPostHandle={setNotiPostHandle}\n            setNotiMessage={setNotiMessage}\n            setNotiPostHandleImage={setNotiPostHandleImage}\n            setNotiPostBodyImage={setNotiPostBodyImage}\n            key={notification.id} \n            notiData={notification}/>)}\n        </div>\n\n        <NotificationPost \n        closeNotiPost={closeNotiPost} \n        notiPostRef={notiPostRef}\n        notiPostName={notiPostName}\n        notiPostImage={notiPostImage}\n        notiPostTime={notiPostTime}\n        notiPostBody={notiPostBody}\n        notiPostHandle={notiPostHandle}\n        notiPostMessage={notiPostMessage}\n        notiPostHandleImage={notiPostHandleImage}\n        notiPostBodyImage={notiPostBodyImage}\n        />\n    </div>\n}","import { firestore, auth } from './Auth';\n\nexport function SearchResult(props){\n\n    const {photoURL, username, bio, id} = props.resultData;\n\n    const usersRef = firestore.collection(\"users\");\n\n    function viewProfile(){\n        if(auth.currentUser.uid === id)return;\n\n        props.openViewProfile();\n        usersRef.doc(id).get().then(doc => {\n            props.setViews(doc.data())\n        })\n        props.setViewUid(id);\n    }\n\n    return (<div className=\"searchResult\" onClick={() => viewProfile()}>\n        <img src={photoURL} alt=\"PP here\"/>\n        <p><span>{username}</span><br/>{bio}</p>\n    </div>)\n}","import Input from '@material-ui/core/Input';\n\nimport { firestore } from './Auth';\nimport { SearchResult } from './SearchResult';\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { useState } from 'react';\n\nexport function SearchPage(props){\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    let usersRef = firestore.collection(\"users\").where(\"username\",\"==\",searchQuery);\n\n    function handleChange(e){\n        setSearchQuery(e.target.value);\n    }\n\n    let [results] = useCollectionData(usersRef, {idField:'id'});\n\n    function openViewProfile(){\n        props.openViewProfile();\n        props.closeProfile();\n        props.closeSearch();\n    }\n\n    return (<div id=\"SearchPage\" className=\"hide\" ref={props.searchRef}>\n       <div id=\"searchbarContainer\">\n            <Input color=\"primary\" id=\"searchbar\" value={searchQuery} onChange={e => handleChange(e)} fullWidth placeholder=\"Enter Name\"/>\n            <p>Names are <b>case and space sensitive</b>. Results will appear once a <b>definite</b> match is found</p>\n       </div>\n       <div id=\"searchResults\">\n            {results && results.map(result => <SearchResult openViewProfile={openViewProfile} setViewUid={props.setViewUid} setViews={props.setViewVariables} key={result.id} resultData={result}/>)}\n       </div>\n    </div>)\n}","import './App.css';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport { SignIn, auth, firestore } from './Auth';\nimport { Home } from './Home';\nimport { Dashboard } from './Dashboard';\nimport { Navbar } from './Navbar';\nimport { ViewProfile } from './ViewProfile';\nimport { Notifications } from './Notifications';\nimport { SearchPage } from './SearchPage';\n\nimport { useRef, useState } from 'react';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  const usersRef = firestore.collection(\"users\");\n\n  const homePageRef = useRef();\n  const closeHomePage = () => homePageRef.current.className = \"hide\";\n  const openHomePage = () => homePageRef.current.className = \"\";\n\n  const profileRef = useRef();\n  const closeProfile = () => profileRef.current.className = \"hide\";\n  const openProfile = () => profileRef.current.className = \"\";\n\n  const viewProfileRef = useRef();\n  const closeViewProfile = () => viewProfileRef.current.className = \"hide\";\n  const openViewProfile = () => viewProfileRef.current.className = \"\";\n\n  const notiRef = useRef();\n  const closeNoti = () => notiRef.current.className = \"hide\";\n  const openNoti = () => notiRef.current.className = \"\";\n\n  const searchRef = useRef();\n  const closeSearch = () => searchRef.current.className = \"hide\";\n  const openSearch = () => searchRef.current.className = \"\";\n\n\n  let [viewUsername, setViewUsername] = useState(\"Loading...\");\n  let [viewImage, setViewImage] = useState(\"\");\n  let [viewBio, setViewBio] = useState(\"Loading...\");\n  let [viewWebsite, setViewWebsite] = useState(\"Loading...\");\n  let [viewEmail, setViewEmail] = useState(\"Loading...\");\n  let [viewJoined, setViewJoined] = useState(\"Loading...\");\n  let [viewUid, setViewUid] = useState(\"\");\n\n  function setViewVariables(data){\n    setViewUsername(data.username);\n    setViewImage(data.photoURL);\n    setViewBio(data.bio);\n    setViewWebsite(data.website);\n    setViewEmail(data.email);\n    setViewJoined(data.joinDate);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar \n      closeHomePage={closeHomePage} \n      openHomePage={openHomePage} \n      closeProfile={closeProfile} \n      openProfile={openProfile}\n      closeViewProfile={closeViewProfile}\n      openNoti={openNoti}\n      closeNoti={closeNoti}\n      openSearch={openSearch}\n      closeSearch={closeSearch}\n      />\n\n      {user ? <Dashboard \n      openViewProfile={openViewProfile} \n      usersRef={usersRef} \n      profileRef={profileRef}\n      closeHomePage={closeHomePage}\n      closeProfile={closeProfile}\n      setViewVariables={setViewVariables}\n      setViewUid={setViewUid}\n      /> \n      : <SignIn/>}\n\n      <Home homePageRef={homePageRef} \n      openViewProfile={openViewProfile} \n      closeProfile={closeProfile}\n      closeHomePage={closeHomePage}\n      setViewVariables={setViewVariables}\n      setViewUid={setViewUid}\n      />\n\n      <ViewProfile \n      viewProfileRef={viewProfileRef} \n      openViewProfile={openViewProfile}\n      closeProfile={closeProfile}\n      closeHomePage={closeHomePage}\n      viewUsername={viewUsername}\n      viewImage={viewImage}\n      viewBio={viewBio}\n      viewWebsite={viewWebsite}\n      viewEmail={viewEmail}\n      viewJoined={viewJoined}\n      viewUid={viewUid}\n      setViewUid={setViewUid}\n      setViewVariables={setViewVariables}\n      />\n\n      <Notifications notiRef={notiRef}/>\n\n      <SearchPage searchRef={searchRef}\n      openViewProfile={openViewProfile} \n      closeProfile={closeProfile}\n      closeSearch={closeSearch}\n      setViewVariables={setViewVariables}\n      setViewUid={setViewUid}\n      />\n\n      <div id=\"footer\">\n        <p>ZUMTHEZAZAKING &copy;2021</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}